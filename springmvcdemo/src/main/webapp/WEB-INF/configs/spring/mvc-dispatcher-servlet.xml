<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--本配置文件是工名为mvc-dispatcher的DispatcherServlet使用，提供其相关的Spring MVC配置-->

    <!--启用Spring基于annotation的DI, 使用户可以在Spring MVC 中使用Spring的强大功能
        激活@Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource
     等标注
     -->
    <context:annotation-config/>

    <!--DispatcherServlet上下文， 只搜索@Controller 标注的类 不搜索其他标注的类-->
    <context:component-scan base-package="com.tang.mvcdemo">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--HandlerMapping 无需配置 Spring MVC可以默认启动
        DefaultAnnotationHandlerMapping annotation-driven HandlerMapping
    -->

    <!--扩充了注解驱动，可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven/>

    <!--静态资源处理， css, js , imgs-->

    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!--配置ViewResolver
            可以用多个ViewResolver
            使用order属性排序
            InternalResourceViewResolver放在最后
    -->
    <!--< bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" >-->
        <!--<property name="order" value="1" />-->
        <!--<map>-->
        <!--<entry key="json" value="application/json" />-->
        <!--<entry key="xml" value="application/xml" />-->
        <!--<entry key="htm" value="text/html"  />-->
        <!--</map>-->
        <!--<property name="defaultViews">-->
        <!--<list>-->
        <!--<bean-->
        <!--class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">-->
        <!--</bean>-->
        <!--</list>-->
        <!--</property>-->
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
    <!--</bean>-->
    <!-- 输出对象转JSON支持 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                            <value>application/xml;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                            <value>application/xml;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!--<bean id="contentNegotiationManager"-->
          <!--class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">-->
        <!--<property name="favorParameter" value="true" />-->
        <!--<property name="parameterName" value="format" />-->
        <!--<property name="ignoreAcceptHeader" value="false" />-->
        <!--<property name="mediaTypes">-->
            <!--<value>-->
                <!--json=application/json-->
                <!--xml=application/xml-->
                <!--html=text/html-->
            <!--</value>-->
        <!--</property>-->
        <!--<property name="defaultContentType" value="text/html"/>-->
    <!--</bean>-->

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/" />
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true" />
    </bean>

</beans>